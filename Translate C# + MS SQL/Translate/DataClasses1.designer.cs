#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Translate
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BD_local_file")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertWord(Word instance);
    partial void UpdateWord(Word instance);
    partial void DeleteWord(Word instance);
    partial void InsertLocate_language(Locate_language instance);
    partial void UpdateLocate_language(Locate_language instance);
    partial void DeleteLocate_language(Locate_language instance);
    partial void InsertTranslate(Translate instance);
    partial void UpdateTranslate(Translate instance);
    partial void DeleteTranslate(Translate instance);
    partial void InsertRegistration(Registration instance);
    partial void UpdateRegistration(Registration instance);
    partial void DeleteRegistration(Registration instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Translate.Properties.Settings.Default.BD_local_fileConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Word> Word
		{
			get
			{
				return this.GetTable<Word>();
			}
		}
		
		public System.Data.Linq.Table<Locate_language> Locate_language
		{
			get
			{
				return this.GetTable<Locate_language>();
			}
		}
		
		public System.Data.Linq.Table<Translate> Translate
		{
			get
			{
				return this.GetTable<Translate>();
			}
		}
		
		public System.Data.Linq.Table<Registration> Registration
		{
			get
			{
				return this.GetTable<Registration>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Word_tr")]
		public ISingleResult<Word_trResult> Word_tr([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_word, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string lang)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_word, lang);
			return ((ISingleResult<Word_trResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Add_count_status")]
		public int Add_count_status([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string id_proc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_proc);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Add_count_trans")]
		public int Add_count_trans([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Add_id_processor")]
		public int Add_id_processor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string id_proc, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string token_out)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_proc, token_out);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Add_transl")]
		public int Add_transl([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> lang_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> word_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> transl_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lang_id, word_id, transl_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Add_word")]
		public int Add_word([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string word, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> lang_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), word, lang_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Search_id_processor")]
		public ISingleResult<Search_id_processorResult> Search_id_processor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<Search_id_processorResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.search_trans_id")]
		public ISingleResult<search_trans_idResult> search_trans_id([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string lang_lang, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_word, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> transl_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lang_lang, id_word, transl_id);
			return ((ISingleResult<search_trans_idResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Word_s")]
		public ISingleResult<Word_sResult> Word_s()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Word_sResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Word_search")]
		public ISingleResult<Word_searchResult> Word_search([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string word)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), word);
			return ((ISingleResult<Word_searchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Word_search_id")]
		public ISingleResult<Word_search_idResult> Word_search_id([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string word)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), word);
			return ((ISingleResult<Word_search_idResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.language_id")]
		public ISingleResult<language_idResult> language_id([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string lang)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lang);
			return ((ISingleResult<language_idResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Search_status")]
		public ISingleResult<Search_statusResult> Search_status([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string id_proc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_proc);
			return ((ISingleResult<Search_statusResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Word")]
	public partial class Word : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _word_slovo;
		
		private System.Nullable<int> _id_loc;
		
		private EntitySet<Translate> _Translate;
		
		private EntitySet<Translate> _Translate1;
		
		private EntityRef<Locate_language> _Locate_language;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onword_slovoChanging(string value);
    partial void Onword_slovoChanged();
    partial void Onid_locChanging(System.Nullable<int> value);
    partial void Onid_locChanged();
    #endregion
		
		public Word()
		{
			this._Translate = new EntitySet<Translate>(new Action<Translate>(this.attach_Translate), new Action<Translate>(this.detach_Translate));
			this._Translate1 = new EntitySet<Translate>(new Action<Translate>(this.attach_Translate1), new Action<Translate>(this.detach_Translate1));
			this._Locate_language = default(EntityRef<Locate_language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_word_slovo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string word_slovo
		{
			get
			{
				return this._word_slovo;
			}
			set
			{
				if ((this._word_slovo != value))
				{
					this.Onword_slovoChanging(value);
					this.SendPropertyChanging();
					this._word_slovo = value;
					this.SendPropertyChanged("word_slovo");
					this.Onword_slovoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_loc", DbType="Int")]
		public System.Nullable<int> id_loc
		{
			get
			{
				return this._id_loc;
			}
			set
			{
				if ((this._id_loc != value))
				{
					if (this._Locate_language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_locChanging(value);
					this.SendPropertyChanging();
					this._id_loc = value;
					this.SendPropertyChanged("id_loc");
					this.Onid_locChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Word_Translate", Storage="_Translate", ThisKey="id", OtherKey="id_translate_word")]
		public EntitySet<Translate> Translate
		{
			get
			{
				return this._Translate;
			}
			set
			{
				this._Translate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Word_Translate1", Storage="_Translate1", ThisKey="id", OtherKey="id_word")]
		public EntitySet<Translate> Translate1
		{
			get
			{
				return this._Translate1;
			}
			set
			{
				this._Translate1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Locate_language_Word", Storage="_Locate_language", ThisKey="id_loc", OtherKey="id", IsForeignKey=true)]
		public Locate_language Locate_language
		{
			get
			{
				return this._Locate_language.Entity;
			}
			set
			{
				Locate_language previousValue = this._Locate_language.Entity;
				if (((previousValue != value) 
							|| (this._Locate_language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Locate_language.Entity = null;
						previousValue.Word.Remove(this);
					}
					this._Locate_language.Entity = value;
					if ((value != null))
					{
						value.Word.Add(this);
						this._id_loc = value.id;
					}
					else
					{
						this._id_loc = default(Nullable<int>);
					}
					this.SendPropertyChanged("Locate_language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Translate(Translate entity)
		{
			this.SendPropertyChanging();
			entity.Word = this;
		}
		
		private void detach_Translate(Translate entity)
		{
			this.SendPropertyChanging();
			entity.Word = null;
		}
		
		private void attach_Translate1(Translate entity)
		{
			this.SendPropertyChanging();
			entity.Word1 = this;
		}
		
		private void detach_Translate1(Translate entity)
		{
			this.SendPropertyChanging();
			entity.Word1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Locate_language")]
	public partial class Locate_language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _languag;
		
		private EntitySet<Word> _Word;
		
		private EntitySet<Translate> _Translate;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnlanguagChanging(string value);
    partial void OnlanguagChanged();
    #endregion
		
		public Locate_language()
		{
			this._Word = new EntitySet<Word>(new Action<Word>(this.attach_Word), new Action<Word>(this.detach_Word));
			this._Translate = new EntitySet<Translate>(new Action<Translate>(this.attach_Translate), new Action<Translate>(this.detach_Translate));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_languag", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string languag
		{
			get
			{
				return this._languag;
			}
			set
			{
				if ((this._languag != value))
				{
					this.OnlanguagChanging(value);
					this.SendPropertyChanging();
					this._languag = value;
					this.SendPropertyChanged("languag");
					this.OnlanguagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Locate_language_Word", Storage="_Word", ThisKey="id", OtherKey="id_loc")]
		public EntitySet<Word> Word
		{
			get
			{
				return this._Word;
			}
			set
			{
				this._Word.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Locate_language_Translate", Storage="_Translate", ThisKey="id", OtherKey="id_loc")]
		public EntitySet<Translate> Translate
		{
			get
			{
				return this._Translate;
			}
			set
			{
				this._Translate.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Word(Word entity)
		{
			this.SendPropertyChanging();
			entity.Locate_language = this;
		}
		
		private void detach_Word(Word entity)
		{
			this.SendPropertyChanging();
			entity.Locate_language = null;
		}
		
		private void attach_Translate(Translate entity)
		{
			this.SendPropertyChanging();
			entity.Locate_language = this;
		}
		
		private void detach_Translate(Translate entity)
		{
			this.SendPropertyChanging();
			entity.Locate_language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Translate")]
	public partial class Translate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _id_loc;
		
		private System.Nullable<int> _id_word;
		
		private System.Nullable<int> _id_translate_word;
		
		private System.Nullable<int> _count_trans;
		
		private EntityRef<Locate_language> _Locate_language;
		
		private EntityRef<Word> _Word;
		
		private EntityRef<Word> _Word1;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_locChanging(System.Nullable<int> value);
    partial void Onid_locChanged();
    partial void Onid_wordChanging(System.Nullable<int> value);
    partial void Onid_wordChanged();
    partial void Onid_translate_wordChanging(System.Nullable<int> value);
    partial void Onid_translate_wordChanged();
    partial void Oncount_transChanging(System.Nullable<int> value);
    partial void Oncount_transChanged();
    #endregion
		
		public Translate()
		{
			this._Locate_language = default(EntityRef<Locate_language>);
			this._Word = default(EntityRef<Word>);
			this._Word1 = default(EntityRef<Word>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_loc", DbType="Int")]
		public System.Nullable<int> id_loc
		{
			get
			{
				return this._id_loc;
			}
			set
			{
				if ((this._id_loc != value))
				{
					if (this._Locate_language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_locChanging(value);
					this.SendPropertyChanging();
					this._id_loc = value;
					this.SendPropertyChanged("id_loc");
					this.Onid_locChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_word", DbType="Int")]
		public System.Nullable<int> id_word
		{
			get
			{
				return this._id_word;
			}
			set
			{
				if ((this._id_word != value))
				{
					if (this._Word1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_wordChanging(value);
					this.SendPropertyChanging();
					this._id_word = value;
					this.SendPropertyChanged("id_word");
					this.Onid_wordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_translate_word", DbType="Int")]
		public System.Nullable<int> id_translate_word
		{
			get
			{
				return this._id_translate_word;
			}
			set
			{
				if ((this._id_translate_word != value))
				{
					if (this._Word.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_translate_wordChanging(value);
					this.SendPropertyChanging();
					this._id_translate_word = value;
					this.SendPropertyChanged("id_translate_word");
					this.Onid_translate_wordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count_trans", DbType="Int")]
		public System.Nullable<int> count_trans
		{
			get
			{
				return this._count_trans;
			}
			set
			{
				if ((this._count_trans != value))
				{
					this.Oncount_transChanging(value);
					this.SendPropertyChanging();
					this._count_trans = value;
					this.SendPropertyChanged("count_trans");
					this.Oncount_transChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Locate_language_Translate", Storage="_Locate_language", ThisKey="id_loc", OtherKey="id", IsForeignKey=true)]
		public Locate_language Locate_language
		{
			get
			{
				return this._Locate_language.Entity;
			}
			set
			{
				Locate_language previousValue = this._Locate_language.Entity;
				if (((previousValue != value) 
							|| (this._Locate_language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Locate_language.Entity = null;
						previousValue.Translate.Remove(this);
					}
					this._Locate_language.Entity = value;
					if ((value != null))
					{
						value.Translate.Add(this);
						this._id_loc = value.id;
					}
					else
					{
						this._id_loc = default(Nullable<int>);
					}
					this.SendPropertyChanged("Locate_language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Word_Translate", Storage="_Word", ThisKey="id_translate_word", OtherKey="id", IsForeignKey=true)]
		public Word Word
		{
			get
			{
				return this._Word.Entity;
			}
			set
			{
				Word previousValue = this._Word.Entity;
				if (((previousValue != value) 
							|| (this._Word.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Word.Entity = null;
						previousValue.Translate.Remove(this);
					}
					this._Word.Entity = value;
					if ((value != null))
					{
						value.Translate.Add(this);
						this._id_translate_word = value.id;
					}
					else
					{
						this._id_translate_word = default(Nullable<int>);
					}
					this.SendPropertyChanged("Word");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Word_Translate1", Storage="_Word1", ThisKey="id_word", OtherKey="id", IsForeignKey=true)]
		public Word Word1
		{
			get
			{
				return this._Word1.Entity;
			}
			set
			{
				Word previousValue = this._Word1.Entity;
				if (((previousValue != value) 
							|| (this._Word1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Word1.Entity = null;
						previousValue.Translate1.Remove(this);
					}
					this._Word1.Entity = value;
					if ((value != null))
					{
						value.Translate1.Add(this);
						this._id_word = value.id;
					}
					else
					{
						this._id_word = default(Nullable<int>);
					}
					this.SendPropertyChanged("Word1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Registration")]
	public partial class Registration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _id_processor;
		
		private string _token;
		
		private int _status_id;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_processorChanging(string value);
    partial void Onid_processorChanged();
    partial void OntokenChanging(string value);
    partial void OntokenChanged();
    partial void Onstatus_idChanging(int value);
    partial void Onstatus_idChanged();
    #endregion
		
		public Registration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_processor", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string id_processor
		{
			get
			{
				return this._id_processor;
			}
			set
			{
				if ((this._id_processor != value))
				{
					this.Onid_processorChanging(value);
					this.SendPropertyChanging();
					this._id_processor = value;
					this.SendPropertyChanged("id_processor");
					this.Onid_processorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_token", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string token
		{
			get
			{
				return this._token;
			}
			set
			{
				if ((this._token != value))
				{
					this.OntokenChanging(value);
					this.SendPropertyChanging();
					this._token = value;
					this.SendPropertyChanged("token");
					this.OntokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_id", DbType="Int NOT NULL")]
		public int status_id
		{
			get
			{
				return this._status_id;
			}
			set
			{
				if ((this._status_id != value))
				{
					this.Onstatus_idChanging(value);
					this.SendPropertyChanging();
					this._status_id = value;
					this.SendPropertyChanged("status_id");
					this.Onstatus_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Word_trResult
	{
		
		private string _word_slovo;
		
		public Word_trResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_word_slovo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string word_slovo
		{
			get
			{
				return this._word_slovo;
			}
			set
			{
				if ((this._word_slovo != value))
				{
					this._word_slovo = value;
				}
			}
		}
	}
	
	public partial class Search_id_processorResult
	{
		
		private string _id_processor;
		
		public Search_id_processorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_processor", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string id_processor
		{
			get
			{
				return this._id_processor;
			}
			set
			{
				if ((this._id_processor != value))
				{
					this._id_processor = value;
				}
			}
		}
	}
	
	public partial class search_trans_idResult
	{
		
		private int _id;
		
		public search_trans_idResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	public partial class Word_sResult
	{
		
		private string _col;
		
		public Word_sResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_col", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string col
		{
			get
			{
				return this._col;
			}
			set
			{
				if ((this._col != value))
				{
					this._col = value;
				}
			}
		}
	}
	
	public partial class Word_searchResult
	{
		
		private string _word_slovo;
		
		public Word_searchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_word_slovo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string word_slovo
		{
			get
			{
				return this._word_slovo;
			}
			set
			{
				if ((this._word_slovo != value))
				{
					this._word_slovo = value;
				}
			}
		}
	}
	
	public partial class Word_search_idResult
	{
		
		private int _id;
		
		public Word_search_idResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	public partial class language_idResult
	{
		
		private int _id;
		
		public language_idResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	public partial class Search_statusResult
	{
		
		private int _status_id;
		
		public Search_statusResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_id", DbType="Int NOT NULL")]
		public int status_id
		{
			get
			{
				return this._status_id;
			}
			set
			{
				if ((this._status_id != value))
				{
					this._status_id = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
